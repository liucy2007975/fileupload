buildscript {
	ext {
		springBootVersion = '2.2.7.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}
plugins {
	id "io.spring.dependency-management" version "1.0.9.RELEASE"
}
version '1.0'

apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
sourceCompatibility = 1.8
targetCompatibility = 1.8

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

// In this section you declare where to find the dependencies of your project
repositories {

	maven {
		url "http://172.25.2.140:8081/repository/maven-public/"
	}
	mavenCentral()
	maven { url 'https://dl.bintray.com/ethereum/maven/' }
	maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
	mavenLocal()

}

def spring_boot_version="2.2.7.RELEASE"
List spring_boot =[
		"org.springframework.boot:spring-boot-starter-web:$spring_boot_version",
		"org.springframework.boot:spring-boot-autoconfigure:$spring_boot_version",
		"org.springframework.boot:spring-boot-configuration-processor:$spring_boot_version",
		"org.springframework.boot:spring-boot-starter-undertow:$spring_boot_version"
]

def log4j_version="2.13.3"
List logger = [
		"org.apache.logging.log4j:log4j-api:$log4j_version",
		"org.apache.logging.log4j:log4j-core:$log4j_version",
		"org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version",
		"org.apache.logging.log4j:log4j-web:$log4j_version"
]

dependencies {
	annotationProcessor 'org.projectlombok:lombok:1.18.6'
	compile 'org.projectlombok:lombok:1.18.6'
	compile spring_boot,logger
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compile 'commons-io:commons-io:2.3'
	compile 'org.apache.commons:commons-lang3:3.1'
	compile 'org.slf4j:jcl-over-slf4j:1.7.30'
}

configurations {
	all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
	all*.exclude group: 'log4j', module: 'log4j'
	all*.exclude group: 'com.github.jnr', module: 'jnr-posix'
	all*.exclude group: 'com.mchange', module: '*'
	all*.exclude group: 'org.springframework.boot',module:'spring-boot-starter-tomcat'
}

configurations.all {
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

clean {
	delete 'dist'
	delete 'build'
	delete 'log'
}



// 清除lib
task myClearLib(type: Delete) {
	delete "$buildDir/libs/lib"
	delete "$buildDir/libs/config"
}

// 拷贝lib
task myCopyLib(type: Copy) {
	into "$buildDir/libs/lib"
	from configurations.runtime
}

// 拷贝lib
task myCopyConfig(type: Copy) {
	into "$buildDir/libs/config"
	from file('src/main/resources/')
}
//拷贝脚本
task myCopySh(type: Copy) {
	into "$buildDir/libs"
	from file('.').listFiles().findAll{File f -> (f.name.endsWith('.sh') || f.name.endsWith('.txt') || f.name.endsWith('.md'))}
}



bootJar{
	baseName = 'fileUploadApi'
	version = '1.0.0'
	excludes = ["*.jar"]
	// lib目录的清除和复制任务
	dependsOn myClearLib
	dependsOn myCopyLib
	dependsOn myCopyConfig
	dependsOn myCopySh
	// 指定依赖包的路径，运行时不再需要指定 java.ext.dir 或 loader.path 参数。
	manifest {
		attributes "Manifest-Version": 1.0,
				'Class-Path': configurations.runtime.files.collect { "lib/$it.name" }.join(' ')
	}
}